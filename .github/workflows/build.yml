name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.5.1
      with:
        node-version: 19.2.0
        architecture: x64
    - name: Install Tauri
      run: npm install
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })

    #- name: Upload Release Asset Exeutable
    #  id: upload-release-asset
    #  uses: actions/upload-release-asset@v1.0.1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: src-tauri/target/release/bundle/msi/Macropad-UI*.msi
    #    asset_name: Macropad-UI_Installer.msi
    #    asset_content_type: application/octet-stream

    #- name: Publish Release
    #  run: |
    #    curl \
    #      --request PATCH \
    #      --url https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }} \
    #     --header 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
    #      --header "Accept: application/vnd.github.v3+json" \
    #      --data-raw '{"draft":false}'
